<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.BookRepository">

    <resultMap id="BookWithUserResult" type="com.example.demo.entity.Book">
        <id property="id" column="id"/>
        <result property="date" column="date"/>
        <result property="time" column="time"/>
        <result property="count" column="count"/>
        <result property="memo" column="memo"/>
        <association property="userName" javaType="com.example.demo.entity.User">
            <id property="userName" column="username"/>
            <result property="password" column="password"/> <!-- Userクラスのフィールドも必要に応じて追加 -->
            <result property="displayName" column="display_name"/> <!-- displayNameに対応するカラム名 -->
            <result property="tellNumber" column="tell_number"/> <!-- tellNumberに対応するカラム名 -->
            <result property="authority" column="authority"/> <!-- Roleについても適宜 -->
        </association>
    </resultMap>

    <!-- IDでの予約検索 -->
    <select id="bookSelectById" resultMap="BookWithUserResult">
        SELECT id, username, date, time, count, memo FROM "book" WHERE id = #{id}
    </select>

    <!-- usernameでの予約検索 -->
    <select id="bookSelectByName" resultMap="BookWithUserResult">
        SELECT id, username, date, time, count, memo FROM "book" WHERE username = #{userName}
    </select>

    <!-- 指定された年と月の予約検索 -->
    <select id="bookSelectByMonth" resultMap="BookWithUserResult">
        SELECT id, username, date, time, count, memo FROM "book" 
        WHERE EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM #{localDate}) 
          AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM #{localDate})
    </select>

    <!-- 日毎の予約検索 -->
    <select id="bookSelectByDate" resultMap="BookWithUserResult">
        SELECT id, username, date, time, count, memo FROM "book" WHERE date = #{localDate}
    </select>

    <!-- 指定された時間の予約検索 -->
    <select id="bookSelectByHour" resultMap="BookWithUserResult">
        SELECT id, username, date, time, count, memo FROM "book" 
        WHERE EXTRACT(HOUR FROM time) = EXTRACT(HOUR FROM #{localTime})
    </select>

    <!-- 新規予約登録 -->
    <insert id="bookInsert" parameterType="com.example.demo.entity.Book">
        INSERT INTO "book" (username, date, time, count, memo)
        VALUES (#{userName.userName}, #{date}, #{time}, #{count}, #{memo}) <!-- userNameフィールドを指定 -->
    </insert>

    <!-- 特定のIDを持つ予約削除 -->
    <delete id="bookDelete" >
        DELETE FROM "book" WHERE id = #{id}
    </delete>
    
    <select id="displayNameSelectByUserName" parameterType="string" resultType="com.example.demo.entity.Book">
        SELECT b.id, u.displayName, b.date, b.time, b.count, b.memo
        FROM Book b
        JOIN User u ON b.userName = u.userName
        WHERE b.userName = #{userName}
    </select>

</mapper>
